/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blood4life.User.presentacion.Funcionario;

import blood4life.User.domain.commands.Command;
import blood4life.User.domain.commands.FindAllCommand;
import blood4life.User.domain.commands.Invoker;
import blood4life.User.domain.services.GestorServicesImpl;
import blood4life.User.domain.services.ServicesEnum;
import blood4life.commons.domain.LugarRecogida;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class GUIVerCitas extends javax.swing.JFrame {

    private Date actual;
    private java.sql.Date after = null;
    private java.sql.Date before = null;
    private LugarRecogida lugar;
    private Invoker inv;
    GestorServicesImpl serv;
    private List<LugarRecogida> rec;

    @SuppressWarnings({"unchecked", "rawtypes"})
    public GUIVerCitas() {
        this.inv = new Invoker();
        this.serv = new GestorServicesImpl();
        initComponents();
        setLocationRelativeTo(null);
        rec = new ArrayList();
        infoJComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ListaLugares = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listar lugares con didponibilidad");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Fecha");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Ver Citas");

        ListaLugares.setModel(new javax.swing.DefaultComboBoxModel<>());
        ListaLugares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaLugaresActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Lugar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addGap(111, 111, 111)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(70, 70, 70))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ListaLugares, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(238, 238, 238))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ListaLugares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(110, 110, 110))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(58, 58, 58))))
        );

        jButton1.getAccessibleContext().setAccessibleName("btnAceptar");
        jButton2.getAccessibleContext().setAccessibleName("btnCancelar");
        jLabel4.getAccessibleContext().setAccessibleName("lblFecha");
        jLabel5.getAccessibleContext().setAccessibleName("lblVerCitas");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new GUICitas(lugar, serv).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new GUIFuncionario().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    private void ListaLugaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaLugaresActionPerformed

        int index = ListaLugares.getSelectedIndex();
        if (!rec.isEmpty()) {
            if(index > -1){
                lugar = rec.get(index);
            }
        } else {
            if (before != null || after != null) {
                JOptionPane.showMessageDialog(null, "Sin coincidencias para la busqueda");
            }
        }
        //infoJComboBox(); -> acepta rango 
        //evento -> injCombox
    }//GEN-LAST:event_ListaLugaresActionPerformed

    private java.sql.Date DateToDateSQL(Date dateToConvert) {
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String sdate = simpleDateFormat.format(dateToConvert);
        return java.sql.Date.valueOf(sdate);
    }

    @SuppressWarnings("unchecked")
    private void infoJComboBox() {
        try {
            ListaLugares.removeAllItems();
            if (before == null || after == null
                || jDateChooser2.getDate() == null) {
                actual = Calendar.getInstance().getTime();
                before = DateToDateSQL(actual);
            } else if (before != null && after != null) {
                before = DateToDateSQL(jDateChooser2.getDate());
            }
            Date mas = new Date(actual.getTime() + 15 * (1000 * 60 * 60 * 24));
            after = DateToDateSQL(mas);
            if (before.compareTo(DateToDateSQL(actual)) < 0
                    || after.compareTo(DateToDateSQL(actual)) < 0
                    || after.compareTo(before) <= 0) {
                JOptionPane.showMessageDialog(null, "Rango de fechas invÃ¡lido");
                ListaLugares.addItem("Sin lugares disponibles");
            } else {
                ArrayList<Object> args = new ArrayList<Object>();
                args.add(before); 
                args.add(after);  
                Command command = new FindAllCommand(args, serv.getImpl(ServicesEnum.LugaresServices));  
                inv.setCommand(command);
                inv.execute();
                FindAllCommand obj = (FindAllCommand) inv.getCommand(); 
                rec =  (List<LugarRecogida>) obj.getList();
                actualizarJbox(rec);
            }
        } catch (Exception ex) {
            Logger.getLogger(GUIVerCitas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void actualizarJbox(List<LugarRecogida> rec) {
        if (rec != null) {
            for (int i = 0; i < rec.size(); i++) {
                ListaLugares.addItem(rec.get(i).getNombre() + " | " + rec.get(i).getDireccion());
            }
        } else {
            ListaLugares.addItem("Sin lugares disponibles");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ListaLugares;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
