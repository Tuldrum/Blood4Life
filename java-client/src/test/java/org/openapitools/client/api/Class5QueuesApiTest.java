/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ClearActionsQueueStatus;
import org.openapitools.client.model.ClearMessagesQueueStatus;
import org.openapitools.client.model.OutboundActions;
import org.openapitools.client.model.OutboundMessages;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Class5QueuesApi
 */
@Ignore
public class Class5QueuesApiTest {

    private final Class5QueuesApi api = new Class5QueuesApi();

    
    /**
     * Clear outbound actions queue.
     *
     * This method is needed when you accidentally sent thousands of actions in a row.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clearActionsQueueTest() throws ApiException {
        ClearActionsQueueStatus response = api.clearActionsQueue();

        // TODO: test validations
    }
    
    /**
     * Clear outbound messages queue.
     *
     * This method is needed when you accidentally sent thousands of messages in a row.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clearMessagesQueueTest() throws ApiException {
        ClearMessagesQueueStatus response = api.clearMessagesQueue();

        // TODO: test validations
    }
    
    /**
     * Get outbound messages queue.
     *
     * When you create an action, all actions are queued up. If an action is not executed, it remains in the queue and will be sent for execution in time. again. The action cannot be executed due to the status of the device connected to the account.  This method give the last 100 actions in the queue.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showActionsQueueTest() throws ApiException {
        OutboundActions response = api.showActionsQueue();

        // TODO: test validations
    }
    
    /**
     * Get outbound messages queue.
     *
     * When sending messages, all messages are in the queue. If the message is not sent, then it remains in the queue and in time it will be sent again. The message may not be sent due to the status of the device connected to the account.   This method give the last 100 messages in the queue.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showMessagesQueueTest() throws ApiException {
        OutboundMessages response = api.showMessagesQueue();

        // TODO: test validations
    }
    
}
