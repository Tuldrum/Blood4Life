/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ForwardMessageRequest;
import org.openapitools.client.model.Messages;
import org.openapitools.client.model.SendContactRequest;
import org.openapitools.client.model.SendFileRequest;
import org.openapitools.client.model.SendLinkRequest;
import org.openapitools.client.model.SendLocationRequest;
import org.openapitools.client.model.SendMessageRequest;
import org.openapitools.client.model.SendMessageStatus;
import org.openapitools.client.model.SendPTTRequest;
import org.openapitools.client.model.SendVCardRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Class2MessagesApi
 */
@Ignore
public class Class2MessagesApiTest {

    private final Class2MessagesApi api = new Class2MessagesApi();

    
    /**
     * Forwarding messages to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forwardMessageTest() throws ApiException {
        ForwardMessageRequest forwardMessageRequest = null;
        SendMessageStatus response = api.forwardMessage(forwardMessageRequest);

        // TODO: test validations
    }
    
    /**
     * Get a list of messages.
     *
     * To receive only new messages, pass the **lastMessageNumber** parameter from the last query.  Files from messages are guaranteed to be stored only for 30 days and can be deleted. Download the files as soon as you get to your server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagesTest() throws ApiException {
        Integer lastMessageNumber = null;
        Boolean last = null;
        String chatId = null;
        Integer limit = null;
        Integer minTime = null;
        Integer maxTime = null;
        Messages response = api.getMessages(lastMessageNumber, last, chatId, limit, minTime, maxTime);

        // TODO: test validations
    }
    
    /**
     * Sending a contact or contact list to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendContactTest() throws ApiException {
        SendContactRequest sendContactRequest = null;
        SendMessageStatus response = api.sendContact(sendContactRequest);

        // TODO: test validations
    }
    
    /**
     * Send a file to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendFileTest() throws ApiException {
        SendFileRequest sendFileRequest = null;
        SendMessageStatus response = api.sendFile(sendFileRequest);

        // TODO: test validations
    }
    
    /**
     * Send text with link and link&#39;s preview to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendLinkTest() throws ApiException {
        SendLinkRequest sendLinkRequest = null;
        SendMessageStatus response = api.sendLink(sendLinkRequest);

        // TODO: test validations
    }
    
    /**
     * Sending a location to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendLocationTest() throws ApiException {
        SendLocationRequest sendLocationRequest = null;
        SendMessageStatus response = api.sendLocation(sendLocationRequest);

        // TODO: test validations
    }
    
    /**
     * Send a message to a new or existing chat.
     *
     * The message will be added to the queue for sending and delivered even if the phone is disconnected from the Internet or authorization is not passed.  Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendMessageTest() throws ApiException {
        SendMessageRequest sendMessageRequest = null;
        SendMessageStatus response = api.sendMessage(sendMessageRequest);

        // TODO: test validations
    }
    
    /**
     * Send a ptt-audio to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendPTTTest() throws ApiException {
        SendPTTRequest sendPTTRequest = null;
        SendMessageStatus response = api.sendPTT(sendPTTRequest);

        // TODO: test validations
    }
    
    /**
     * Sending a vcard to a new or existing chat.
     *
     * Only one of two parameters is needed to determine the destination - chatId or phone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendVCardTest() throws ApiException {
        SendVCardRequest sendVCardRequest = null;
        SendMessageStatus response = api.sendVCard(sendVCardRequest);

        // TODO: test validations
    }
    
}
