/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OutboundMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-10-24T15:11:21.199Z[GMT]")
public class OutboundMessage {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  /**
   * type of the message in queue
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CHAT("chat"),
    
    IMAGE("image"),
    
    PTT("ptt"),
    
    DOCUMENT("document"),
    
    AUDIO("audio"),
    
    VIDEO("video"),
    
    LOCATION("location"),
    
    CALL_LOG("call_log");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_LAST_TRY = "last_try";
  @SerializedName(SERIALIZED_NAME_LAST_TRY)
  private Integer lastTry;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;


  public OutboundMessage id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * message id in queue
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "message id in queue")

  public Integer getId() {
    return id;
  }



  public void setId(Integer id) {
    this.id = id;
  }


  public OutboundMessage body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * text message in queue
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Hey!", value = "text message in queue")

  public String getBody() {
    return body;
  }



  public void setBody(String body) {
    this.body = body;
  }


  public OutboundMessage type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * type of the message in queue
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "chat", value = "type of the message in queue")

  public TypeEnum getType() {
    return type;
  }



  public void setType(TypeEnum type) {
    this.type = type;
  }


  public OutboundMessage lastTry(Integer lastTry) {
    
    this.lastTry = lastTry;
    return this;
  }

   /**
   * Last try time to send a message
   * @return lastTry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1528320463436", value = "Last try time to send a message")

  public Integer getLastTry() {
    return lastTry;
  }



  public void setLastTry(Integer lastTry) {
    this.lastTry = lastTry;
  }


  public OutboundMessage metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Additional message data
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{}", value = "Additional message data")

  public Object getMetadata() {
    return metadata;
  }



  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundMessage outboundMessage = (OutboundMessage) o;
    return Objects.equals(this.id, outboundMessage.id) &&
        Objects.equals(this.body, outboundMessage.body) &&
        Objects.equals(this.type, outboundMessage.type) &&
        Objects.equals(this.lastTry, outboundMessage.lastTry) &&
        Objects.equals(this.metadata, outboundMessage.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, body, type, lastTry, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundMessage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    lastTry: ").append(toIndentedString(lastTry)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

