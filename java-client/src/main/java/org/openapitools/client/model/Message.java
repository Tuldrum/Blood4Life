/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Message
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-10-24T15:11:21.199Z[GMT]")
public class Message {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  /**
   * type of the message
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CHAT("chat"),
    
    IMAGE("image"),
    
    PTT("ptt"),
    
    DOCUMENT("document"),
    
    AUDIO("audio"),
    
    VIDEO("video"),
    
    LOCATION("location"),
    
    CALL_LOG("call_log");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_SENDER_NAME = "senderName";
  @SerializedName(SERIALIZED_NAME_SENDER_NAME)
  private String senderName;

  public static final String SERIALIZED_NAME_FROM_ME = "fromMe";
  @SerializedName(SERIALIZED_NAME_FROM_ME)
  private Boolean fromMe;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Integer time;

  public static final String SERIALIZED_NAME_CHAT_ID = "chatId";
  @SerializedName(SERIALIZED_NAME_CHAT_ID)
  private String chatId;

  public static final String SERIALIZED_NAME_MESSAGE_NUMBER = "messageNumber";
  @SerializedName(SERIALIZED_NAME_MESSAGE_NUMBER)
  private Integer messageNumber;


  public Message id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false_17472822486@c.us_DF38E6A25B42CC8CCE57EC40F", value = "unique id")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public Message body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * text message for type \&quot;chat\&quot;, or link to download the file for \&quot;ptt\&quot;, \&quot;image\&quot;, \&quot;audio\&quot;, \&quot;video\&quot; and \&quot;document\&quot;, or latitude and longitude for \&quot;location\&quot;, or message \&quot;[Call]\&quot; for \&quot;call_log\&quot;
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Ok!", value = "text message for type \"chat\", or link to download the file for \"ptt\", \"image\", \"audio\", \"video\" and \"document\", or latitude and longitude for \"location\", or message \"[Call]\" for \"call_log\"")

  public String getBody() {
    return body;
  }



  public void setBody(String body) {
    this.body = body;
  }


  public Message type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * type of the message
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "chat", value = "type of the message")

  public TypeEnum getType() {
    return type;
  }



  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Message senderName(String senderName) {
    
    this.senderName = senderName;
    return this;
  }

   /**
   * Sender name
   * @return senderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Ilya", value = "Sender name")

  public String getSenderName() {
    return senderName;
  }



  public void setSenderName(String senderName) {
    this.senderName = senderName;
  }


  public Message fromMe(Boolean fromMe) {
    
    this.fromMe = fromMe;
    return this;
  }

   /**
   * true - outgoing, false - incoming
   * @return fromMe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "true - outgoing, false - incoming")

  public Boolean getFromMe() {
    return fromMe;
  }



  public void setFromMe(Boolean fromMe) {
    this.fromMe = fromMe;
  }


  public Message author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * Author ID of the message, useful for groups
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "17472822486@c.us", value = "Author ID of the message, useful for groups")

  public String getAuthor() {
    return author;
  }



  public void setAuthor(String author) {
    this.author = author;
  }


  public Message time(Integer time) {
    
    this.time = time;
    return this;
  }

   /**
   * send time, unix timestamp
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1504208593", value = "send time, unix timestamp")

  public Integer getTime() {
    return time;
  }



  public void setTime(Integer time) {
    this.time = time;
  }


  public Message chatId(String chatId) {
    
    this.chatId = chatId;
    return this;
  }

   /**
   * chat ID
   * @return chatId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "17472822486@c.us", value = "chat ID")

  public String getChatId() {
    return chatId;
  }



  public void setChatId(String chatId) {
    this.chatId = chatId;
  }


  public Message messageNumber(Integer messageNumber) {
    
    this.messageNumber = messageNumber;
    return this;
  }

   /**
   * sequence number of the message in the database
   * @return messageNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "sequence number of the message in the database")

  public Integer getMessageNumber() {
    return messageNumber;
  }



  public void setMessageNumber(Integer messageNumber) {
    this.messageNumber = messageNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Message message = (Message) o;
    return Objects.equals(this.id, message.id) &&
        Objects.equals(this.body, message.body) &&
        Objects.equals(this.type, message.type) &&
        Objects.equals(this.senderName, message.senderName) &&
        Objects.equals(this.fromMe, message.fromMe) &&
        Objects.equals(this.author, message.author) &&
        Objects.equals(this.time, message.time) &&
        Objects.equals(this.chatId, message.chatId) &&
        Objects.equals(this.messageNumber, message.messageNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, body, type, senderName, fromMe, author, time, chatId, messageNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Message {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    senderName: ").append(toIndentedString(senderName)).append("\n");
    sb.append("    fromMe: ").append(toIndentedString(fromMe)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    messageNumber: ").append(toIndentedString(messageNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

