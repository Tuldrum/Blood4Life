/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InstanceStatusStatusDataActions;

/**
 * More information about instance status
 */
@ApiModel(description = "More information about instance status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-10-24T15:11:21.199Z[GMT]")
public class InstanceStatusStatusData {
  /**
   * Instance Substatus
   */
  @JsonAdapter(SubstatusEnum.Adapter.class)
  public enum SubstatusEnum {
    NORMAL("normal"),
    
    LOADING("loading"),
    
    OFFLINE("offline"),
    
    EXPIRED("expired"),
    
    OPENING("opening"),
    
    PAIRING("pairing"),
    
    TIMEOUT("timeout"),
    
    COMPUTER("computer"),
    
    PHONE("phone"),
    
    BATTERY_LOW_1("battery_low_1"),
    
    BATTERY_LOW_2("battery_low_2");

    private String value;

    SubstatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SubstatusEnum fromValue(String value) {
      for (SubstatusEnum b : SubstatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SubstatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubstatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubstatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SubstatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SUBSTATUS = "substatus";
  @SerializedName(SERIALIZED_NAME_SUBSTATUS)
  private SubstatusEnum substatus;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_MSG = "msg";
  @SerializedName(SERIALIZED_NAME_MSG)
  private String msg;

  public static final String SERIALIZED_NAME_SUBMSG = "submsg";
  @SerializedName(SERIALIZED_NAME_SUBMSG)
  private String submsg;

  public static final String SERIALIZED_NAME_ACTIONS = "actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private InstanceStatusStatusDataActions actions;

  /**
   * The reason why the instance is in \&quot;loading\&quot; status
   */
  @JsonAdapter(ReasonEnum.Adapter.class)
  public enum ReasonEnum {
    CONNECTING("connecting"),
    
    SYNCING("syncing"),
    
    OFFLINE("offline"),
    
    PROXYBLOCK("proxyblock"),
    
    CONFLICT("conflict");

    private String value;

    ReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReasonEnum fromValue(String value) {
      for (ReasonEnum b : ReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReasonEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private ReasonEnum reason;


  public InstanceStatusStatusData substatus(SubstatusEnum substatus) {
    
    this.substatus = substatus;
    return this;
  }

   /**
   * Instance Substatus
   * @return substatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "normal", value = "Instance Substatus")

  public SubstatusEnum getSubstatus() {
    return substatus;
  }



  public void setSubstatus(SubstatusEnum substatus) {
    this.substatus = substatus;
  }


  public InstanceStatusStatusData title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Status title in the language of the instance
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Keep your phone connected", value = "Status title in the language of the instance")

  public String getTitle() {
    return title;
  }



  public void setTitle(String title) {
    this.title = title;
  }


  public InstanceStatusStatusData msg(String msg) {
    
    this.msg = msg;
    return this;
  }

   /**
   * Status message in the language of the instance
   * @return msg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WhatsApp connects to your phone to sync messages. To reduce data usage, connect your phone to Wi-Fi.", value = "Status message in the language of the instance")

  public String getMsg() {
    return msg;
  }



  public void setMsg(String msg) {
    this.msg = msg;
  }


  public InstanceStatusStatusData submsg(String submsg) {
    
    this.submsg = submsg;
    return this;
  }

   /**
   * Additional status message in the language of the instance
   * @return submsg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Retrying...", value = "Additional status message in the language of the instance")

  public String getSubmsg() {
    return submsg;
  }



  public void setSubmsg(String submsg) {
    this.submsg = submsg;
  }


  public InstanceStatusStatusData actions(InstanceStatusStatusDataActions actions) {
    
    this.actions = actions;
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstanceStatusStatusDataActions getActions() {
    return actions;
  }



  public void setActions(InstanceStatusStatusDataActions actions) {
    this.actions = actions;
  }


  public InstanceStatusStatusData reason(ReasonEnum reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * The reason why the instance is in \&quot;loading\&quot; status
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "connecting", value = "The reason why the instance is in \"loading\" status")

  public ReasonEnum getReason() {
    return reason;
  }



  public void setReason(ReasonEnum reason) {
    this.reason = reason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceStatusStatusData instanceStatusStatusData = (InstanceStatusStatusData) o;
    return Objects.equals(this.substatus, instanceStatusStatusData.substatus) &&
        Objects.equals(this.title, instanceStatusStatusData.title) &&
        Objects.equals(this.msg, instanceStatusStatusData.msg) &&
        Objects.equals(this.submsg, instanceStatusStatusData.submsg) &&
        Objects.equals(this.actions, instanceStatusStatusData.actions) &&
        Objects.equals(this.reason, instanceStatusStatusData.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(substatus, title, msg, submsg, actions, reason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceStatusStatusData {\n");
    sb.append("    substatus: ").append(toIndentedString(substatus)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    submsg: ").append(toIndentedString(submsg)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

