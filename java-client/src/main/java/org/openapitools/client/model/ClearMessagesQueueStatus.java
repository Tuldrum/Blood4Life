/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ClearMessagesQueueStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-10-24T15:11:21.199Z[GMT]")
public class ClearMessagesQueueStatus {
  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_MESSAGE_TEXTS_EXAMPLE = "messageTextsExample";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TEXTS_EXAMPLE)
  private List<String> messageTextsExample = null;


  public ClearMessagesQueueStatus message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Messages queue clear status
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Cleared 2 messages", value = "Messages queue clear status")

  public String getMessage() {
    return message;
  }



  public void setMessage(String message) {
    this.message = message;
  }


  public ClearMessagesQueueStatus messageTextsExample(List<String> messageTextsExample) {
    
    this.messageTextsExample = messageTextsExample;
    return this;
  }

  public ClearMessagesQueueStatus addMessageTextsExampleItem(String messageTextsExampleItem) {
    if (this.messageTextsExample == null) {
      this.messageTextsExample = new ArrayList<String>();
    }
    this.messageTextsExample.add(messageTextsExampleItem);
    return this;
  }

   /**
   * Content of the first hundred messages from the cleaned queue
   * @return messageTextsExample
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content of the first hundred messages from the cleaned queue")

  public List<String> getMessageTextsExample() {
    return messageTextsExample;
  }



  public void setMessageTextsExample(List<String> messageTextsExample) {
    this.messageTextsExample = messageTextsExample;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClearMessagesQueueStatus clearMessagesQueueStatus = (ClearMessagesQueueStatus) o;
    return Objects.equals(this.message, clearMessagesQueueStatus.message) &&
        Objects.equals(this.messageTextsExample, clearMessagesQueueStatus.messageTextsExample);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, messageTextsExample);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClearMessagesQueueStatus {\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messageTextsExample: ").append(toIndentedString(messageTextsExample)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

