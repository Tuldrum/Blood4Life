/*
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Action for change status
 */
@ApiModel(description = "Action for change status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-10-24T15:11:21.199Z[GMT]")
public class InstanceStatusAction {
  /**
   * Method name
   */
  @JsonAdapter(ActEnum.Adapter.class)
  public enum ActEnum {
    EXPIRY("expiry"),
    
    RETRY("retry"),
    
    TAKEOVER("takeover"),
    
    LOGOUT("logout");

    private String value;

    ActEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActEnum fromValue(String value) {
      for (ActEnum b : ActEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACT = "act";
  @SerializedName(SERIALIZED_NAME_ACT)
  private ActEnum act;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;


  public InstanceStatusAction act(ActEnum act) {
    
    this.act = act;
    return this;
  }

   /**
   * Method name
   * @return act
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "logout", value = "Method name")

  public ActEnum getAct() {
    return act;
  }



  public void setAct(ActEnum act) {
    this.act = act;
  }


  public InstanceStatusAction label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Action caption for the button
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Logout", value = "Action caption for the button")

  public String getLabel() {
    return label;
  }



  public void setLabel(String label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceStatusAction instanceStatusAction = (InstanceStatusAction) o;
    return Objects.equals(this.act, instanceStatusAction.act) &&
        Objects.equals(this.label, instanceStatusAction.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(act, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceStatusAction {\n");
    sb.append("    act: ").append(toIndentedString(act)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

